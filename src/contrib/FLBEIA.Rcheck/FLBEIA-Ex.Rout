
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "FLBEIA"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('FLBEIA')
Loading required package: FLCore
Loading required package: lattice
Loading required package: iterators
FLCore (Version 2.6.12, packaged: 2019-01-22 16:23:11 UTC)
Loading required package: FLFleet
Loading required package: ggplot2

Attaching package: ‘ggplot2’

The following object is masked from ‘package:FLCore’:

    %+%

Warning: replacing previous import ‘FLCore::%+%’ by ‘ggplot2::%+%’ when loading ‘FLBEIA’
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("FLBEIA")
> ### * FLBEIA
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: FLBEIA
> ### Title: Run the FLBEIA bio-economic simulation model
> ### Aliases: FLBEIA
> 
> ### ** Examples
> 
> ## Not run: 
> ##D library(FLBEIA)
> ##D library(FLAssess)          # required to use the IcesHCR. Not available for win64
> ##D library(FLash)             # required to use the IcesHCR. Not available for win64
> ##D library(ggplot2)  
> ##D 
> ##D 
> ##D #---------------------------------------------------------------- 
> ##D # Example with 1 stock, 1 Fleets, 1 seasons and 1 iteration: one
> ##D #----------------------------------------------------------------
> ##D 
> ##D # Load the data to run FLBEIA in a one stock one fleet example using the HCR used by ICES in the MSY framework. 
> ##D  data(one) 
> ##D 
> ##D # The names and the class of the objects needed to run FLBEIA.
> ##D # sapply(ls(), function(x) class(get(x)))
> ##D 
> ##D # In this scenario a single, age-structured, stock is exploited by a single fleet with a unique metier. 
> ##D # The fleet catches yearly exactly the adviced TAC and there is no exit-entry of vessels in the fishery.  
> ##D # The stock abundance and exploitation level is observed without error in the observation model.
> ##D # There is no assessment model and the TAC advice is used through the HCR used by ICES in the MSY framework.  
> ##D  
> ##D 
> ##D   
> ##D     
> ##D s0 <- FLBEIA(biols = oneBio,       # FLBiols object with one FLBiol element for stk1.
> ##D                SRs = oneSR,        # A list with one FLSRSim object for stk1.
> ##D                BDs = NULL,         # No Biomass Dynamic populations in this case.
> ##D             fleets = oneFl,        # FLFleets object with on fleet.
> ##D             covars = oneCv,         # covars not used
> ##D            indices = NULL,         # indices not used 
> ##D             advice = oneAdv,       # A list with two elements 'TAC' and 'quota.share'
> ##D          main.ctrl = oneMainC,     # A list with one element to define the start and end of the simulation.
> ##D         biols.ctrl = oneBioC,      # A list with one element to select the model to simulate the stock dynamics.
> ##D        fleets.ctrl = oneFlC,       # A list with several elements to select fleet dynamic models and store additional parameters.
> ##D        covars.ctrl = oneCvC,         # covars control not used 
> ##D           obs.ctrl = oneObsC,      # A list with one element to define how the stock observed ("PerfectObs").
> ##D        assess.ctrl = oneAssC,      # A list with one element to define how the stock assessment model used ("NoAssessment").
> ##D        advice.ctrl = oneAdvC)       # A list with one element to define how the TAC advice is obtained ("IcesHCR").
> ##D 
> ##D # Names of the object returned by FLBEIA
> ##D names(s0)
> ##D 
> ##D # The default plot for FLBiol defined in FLCore
> ##D plot(s0$biols[[1]])
> ##D 
> ##D # Create summary data frames (biological, economic, and catch)
> ##D proj.yr     <- 2013 
> ##D s0_sum      <- bioSum(s0)
> ##D s0_flt      <- fltSum(s0)
> ##D s0_fltStk   <- fltStkSum(s0)
> ##D 
> ##D 
> ##D # Create several plots and save them in the working directory using 'pdf' format and 
> ##D # 's0' suffix in the name.
> ##D 
> ##D 
> ##D plotFLBiols(s0$biols, pdfnm='s0')
> ##D plotFLFleets(s0$fleets, pdfnm='s0')
> ##D plotEco(s0, pdfnm='s0')
> ##D plotfltStkSum(s0, pdfnm='s0')
> ##D 
> ##D #------------------------------------------------------------ 
> ##D # Example with several iterations: oneIters
> ##D #------------------------------------------------------------
> ##D  
> ##D  # Load the same data set as before but with 3 iterations.
> ##D  # Run FLBEIA and plot the results
> ##D  
> ##D data(oneIt)
> ##D  
> ##D s1 <- FLBEIA(biols = oneItBio,       # FLBiols object with one FLBiol element for stk1.
> ##D                SRs = oneItSR,        # A list with one FLSRSim object for stk1.
> ##D                BDs = NULL,         # No Biomass Dynamic populations in this case.
> ##D             fleets = oneItFl,        # FLFleets object with on fleet.
> ##D             covars = oneItCv,         # covars not used
> ##D            indices = NULL,         # indices not used 
> ##D             advice = oneItAdv,       # A list with two elements 'TAC' and 'quota.share'
> ##D          main.ctrl = oneItMainC,     # A list with one element to define the start and end of the simulation.
> ##D         biols.ctrl = oneItBioC,      # A list with one element to select the model to simulate the stock dynamics.
> ##D        fleets.ctrl = oneItFlC,       # A list with several elements to select fleet dynamic models and store additional parameters.
> ##D        covars.ctrl = oneItCvC,         # covars control not used 
> ##D           obs.ctrl = oneItObsC,      # A list with one element to define how the stock observed ("PerfectObs").
> ##D        assess.ctrl = oneItAssC,      # A list with one element to define how the stock assessment model used ("NoAssessment").
> ##D        advice.ctrl = oneItAdvC)       # A list with one element to define how the TAC advice is obtained ("IcesHCR").
> ##D 
> ##D # Names of the object returned by FLBEIA
> ##D names(s1)
> ##D 
> ##D # The default plot for FLBiol defined in FLCore
> ##D plot(s1$biols[[1]])
> ##D 
> ##D # Create summary data frames (biological, economic, and catch)
> ##D proj.yr     <- 2013 
> ##D s1_bio     <- bioSum(s1)
> ##D s1_flt     <- fltSum(s1)
> ##D s1_fltStk  <- fltStkSum(s1)
> ##D 
> ##D s1_bioQ    <- bioSumQ(s1_bio)
> ##D s1_fltQ    <- fltSumQ(s1_flt)
> ##D s1_fltStkQ <- fltStkSumQ(s1_fltStk)
> ##D 
> ##D s1b_bio     <- bioSum(s1, long = FALSE)
> ##D s1b_flt     <- fltSum(s1, long = FALSE)
> ##D s1b_fltStk  <- fltStkSum(s1, long = FALSE)
> ##D 
> ##D s1b_fltQ    <- bioSumQ(s1b_bio)
> ##D s1b_fltQ    <- fltSumQ(s1b_flt)
> ##D s1b_fltStkQ <- fltStkSumQ(s1b_fltStk)
> ##D 
> ##D # Create several plots and save them in the working directory using 'pdf' format and 
> ##D # 's1' suffix in the name.
> ##D 
> ##D #' plotFLBiols(s1$biols, pdfnm='s1')
> ##D plotFLFleets(s1$fleets, pdfnm='s1')
> ##D plotEco(s1, pdfnm='s1')
> ##D plotfltStkSum(s1, pdfnm='s1') 
> ##D 
> ##D  
> ##D #------------------------------------------------------------------ 
> ##D # Example with 2 stock, 2 Fleets, 4 seasons and 1 iteration: multi
> ##D #------------------------------------------------------------------
> ##D  
> ##D  # Load the multi data set. This dataset has 2 stocks, one stk1 is 
> ##D  # age structured and the second one stk2 is aggregated in biomass.
> ##D  
> ##D data(multi)
> ##D  
> ##D  # Run FLBEIA.
> ##D  
> ##D s2 <- FLBEIA(biols = multiBio,       # FLBiols object with 2 FLBiol element for stk1.
> ##D                SRs = multiSR,        # A list with 1 FLSRSim object for stk1.
> ##D                BDs = multiBD,        # A list with 1 FLBDSim object for stk2.
> ##D             fleets = multiFl,        # FLFleets object with on fleet.
> ##D             covars = multiCv,         # covars not used
> ##D            indices = NULL,         # indices not used 
> ##D             advice = multiAdv,       # A list with two elements 'TAC' and 'quota.share'
> ##D          main.ctrl = multiMainC,     # A list with one element to define the start and end of the simulation.
> ##D         biols.ctrl = multiBioC,      # A list with one element to select the model to simulate the stock dynamics.
> ##D        fleets.ctrl = multiFlC,       # A list with several elements to select fleet dynamic models and store additional parameters.
> ##D        covars.ctrl = multiCvC,         # covars control not used 
> ##D           obs.ctrl = multiObsC,      # A list with one element to define how the stock observed ("PerfectObs").
> ##D        assess.ctrl = multiAssC,      # A list with one element to define how the stock assessment model used ("NoAssessment").
> ##D        advice.ctrl = multiAdvC)       # A list with one element to define how the TAC advice is obtained ("IcesHCR").
> ##D 
> ##D # Names of the object returned by FLBEIA
> ##D names(s2)
> ##D 
> ##D # The default plot for FLBiol defined in FLCore
> ##D plot(s2$biols[[1]])
> ##D 
> ##D # Create summary data frames (biological, economic, and catch)
> ##D 
> ##D s2_sum      <- bioSum(s2)
> ##D s2_flt      <- fltSum(s2)
> ##D 
> ##D s2b_flt     <- fltSum(s2, byyear = FALSE)
> ##D 
> ##D s2_fltStk   <- fltStkSum(s2)
> ##D 
> ##D # Create several plots and save them in the working directory using 'pdf' format and 
> ##D # 's2' suffix in the name.
> ##D 
> ##D plotFLBiols(s2$biols, pdfnm='s2')
> ##D plotFLFleets(s2$fleets, pdfnm='s2')
> ##D plotEco(s2, pdfnm='s2')
> ##D plotfltStkSum(s2, pdfnm='s2')
> ## End(Not run)
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("annualTAC")
> ### * annualTAC
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: annualTAC
> ### Title: Harvest Control Rules (HCRs)
> ### Aliases: annualTAC aneHCRE F2CatchHCR FroeseHCR IcesHCR neaMAC_ltmp
> ###   annexIVHCR ghlHCR MAPHCR CFPMSYHCR MultiStockHCR pidHCR pidHCRItarg
> ###   little2011HCR
> 
> ### ** Examples
> 
> ## Not run: 
> ##D library(FLBEIA)
> ##D library(FLAssess)          # required to use the IcesHCR. Not available for win64
> ##D library(FLash)             # required to use the IcesHCR. Not available for win64
> ##D library(ggplot2)  
> ##D 
> ##D # Load the data to run FLBEIA in a one stock one fleet example using the HCR used by ICES in the MSY framework. 
> ##D  data(one) 
> ##D  
> ##D oneAdv$TAC[,ac(2009:2025)] <- NA # Put NA-s in the projection years to check how the function fills the advice object.
> ##D  
> ##D res <- IcesHCR(oneSt, oneAdv, oneAdvC, 19, 'stk1') # The value printed in the screen is the fishing mortality used in the advice.
> ##D  
> ##D res$TAC[,'2009']    # The resulting management advice.
> ## End(Not run)  
> 
> 
> 
> cleanEx()
> nameEx("bioSum")
> ### * bioSum
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: bioSum
> ### Title: Summary of the FLBEIA output
> ### Aliases: bioSum bioSumQ fltSum fltSumQ fltStkSum fltStkSumQ mtStkSum
> ###   mtStkSumQ mtSum mtSumQ advSum advSumQ riskSum npv npvQ vesselSum
> ###   vesselSumQ vesselStkSum vesselStkSumQ
> 
> ### ** Examples
> 
> ## Not run: 
> ##D 
> ##D library(FLBEIA)
> ##D 
> ##D # Apply the summary functions to the examples runs in FLBEIA help page.
> ##D # Test the different arguments in summary function.
> ##D 
> ##D data(res_flbeia)
> ##D #------------------------------------------------
> ##D # Example One: One stock, one fleet, one iter.
> ##D #------------------------------------------------
> ##D oneRes_bio    <- bioSum(oneRes)
> ##D oneRes_flt    <- fltSum(oneRes)
> ##D oneRes_fltStk <- fltStkSum(oneRes)
> ##D oneRes_mt     <- mtSum(oneRes)
> ##D oneRes_mtStk  <- mtStkSum(oneRes)
> ##D oneRes_adv    <- advSum(oneRes)
> ##D 
> ##D head(oneRes_bio)
> ##D head(oneRes_flt)
> ##D head(oneRes_fltStk)
> ##D head(oneRes_mt)
> ##D head(oneRes_mtStk)
> ##D head(oneRes_adv)
> ##D 
> ##D oneRes_bioQ    <- bioSumQ(oneRes_bio)
> ##D oneRes_fltQ    <- fltSumQ(oneRes_flt)
> ##D oneRes_fltStkQ <- fltStkSumQ(oneRes_fltStk)
> ##D oneRes_mtQ     <- mtSumQ(oneRes_mt)
> ##D oneRes_mtStkQ  <- mtStkSumQ(oneRes_mtStk)
> ##D oneRes_advQ    <- advSumQ(oneRes_adv)
> ##D 
> ##D head(oneRes_bioQ)
> ##D head(oneRes_fltQ)
> ##D head(oneRes_fltStkQ)
> ##D head(oneRes_mtQ)
> ##D head(oneRes_mtStkQ)
> ##D head(oneRes_advQ)
> ##D 
> ##D # Wide format
> ##D oneRes_bio    <- bioSum(oneRes, long = FALSE, years = ac(2016:2020))
> ##D oneRes_flt    <- fltSum(oneRes, long = FALSE, years = ac(2016:2020))
> ##D oneRes_fltStk <- fltStkSum(oneRes, long = FALSE, years = ac(2016:2020))
> ##D oneRes_mt     <- mtSum(oneRes, long = FALSE, years = ac(2016:2020))
> ##D oneRes_mtStk  <- mtStkSum(oneRes, long = FALSE, years = ac(2016:2020))
> ##D oneRes_adv    <- advSum(oneRes, long = FALSE, years = ac(2016:2020))
> ##D 
> ##D head(oneRes_bio)
> ##D head(oneRes_flt)
> ##D head(oneRes_fltStk)
> ##D head(oneRes_mt)
> ##D head(oneRes_mtStk)
> ##D head(oneRes_adv)
> ##D 
> ##D oneRes_bioQ    <- bioSumQ(oneRes_bio)
> ##D oneRes_fltQ    <- fltSumQ(oneRes_flt)
> ##D oneRes_fltStkQ <- fltStkSumQ(oneRes_fltStk)
> ##D oneRes_mtQ     <- mtSumQ(oneRes_mt)
> ##D oneRes_mtStkQ  <- mtStkSumQ(oneRes_mtStk)
> ##D oneRes_advQ    <- advSumQ(oneRes_adv)
> ##D 
> ##D head(oneRes_bio)
> ##D head(oneRes_flt)
> ##D head(oneRes_fltStk)
> ##D head(oneRes_mt)
> ##D head(oneRes_mtStk)
> ##D head(oneRes_adv)
> ##D 
> ##D # Wide format with seasonal disaggregation. No seasonal disagregation available for bio and adv summaries.
> ##D 
> ##D oneRes_bio    <- bioSum(oneRes, long = FALSE) # Biol summary is only by year.
> ##D oneRes_flt    <- fltSum(oneRes, long = FALSE, byyear = FALSE)
> ##D oneRes_fltStk <- fltStkSum(oneRes, long = FALSE, byyear = FALSE)
> ##D oneRes_mt     <- mtSum(oneRes, long = FALSE, byyear = FALSE)
> ##D oneRes_mtStk  <- mtStkSum(oneRes, long = FALSE, byyear = FALSE)
> ##D oneRes_adv    <- advSum(oneRes, long = FALSE) # Advice summary is only by year.
> ##D 
> ##D oneRes_bioQ    <- bioSumQ(oneRes_bio)
> ##D oneRes_fltQ    <- fltSumQ(oneRes_flt)
> ##D oneRes_fltStkQ <- fltStkSumQ(oneRes_fltStk)
> ##D oneRes_mtQ     <- mtSumQ(oneRes_mt)
> ##D oneRes_mtStkQ  <- mtStkSumQ(oneRes_mtStk)
> ##D oneRes_advQ    <- advSumQ(oneRes_adv)
> ##D oneRes_bio    <- bioSum(oneRes, long = TRUE) # Biol summary is only by year.
> ##D oneRes_flt    <- fltSum(oneRes, long = TRUE, byyear = FALSE)
> ##D oneRes_fltStk <- fltStkSum(oneRes, long = TRUE, byyear = FALSE)
> ##D oneRes_mt     <- mtSum(oneRes, long = TRUE, byyear = FALSE)
> ##D oneRes_mtStk  <- mtStkSum(oneRes, long = TRUE, byyear = FALSE)
> ##D oneRes_adv    <- advSum(oneRes, long = TRUE) # Advice summary is only by year.
> ##D 
> ##D oneRes_bioQ    <- bioSumQ(oneRes_bio)
> ##D oneRes_fltQ    <- fltSumQ(oneRes_flt)
> ##D oneRes_fltStkQ <- fltStkSumQ(oneRes_fltStk)
> ##D oneRes_mtQ     <- mtSumQ(oneRes_mt)
> ##D oneRes_mtStkQ  <- mtStkSumQ(oneRes_mtStk)
> ##D oneRes_advQ    <- advSumQ(oneRes_adv)
> ##D 
> ##D 
> ##D #------------------------------------------------
> ##D # Example OneIt: As one but with iterations.
> ##D #------------------------------------------------
> ##D oneItRes_bio    <- bioSum(oneItRes, scenario = 'with_iters')
> ##D oneItRes_flt    <- fltSum(oneItRes, scenario = 'with_iters')
> ##D oneItRes_fltStk <- fltStkSum(oneItRes, scenario = 'with_iters')
> ##D oneItRes_mt     <- mtSum(oneItRes, scenario = 'with_iters')
> ##D oneItRes_mtStk  <- mtStkSum(oneItRes, scenario = 'with_iters')
> ##D oneItRes_adv    <- advSum(oneItRes, scenario = 'with_iters')
> ##D 
> ##D oneItRes_bioQ    <- bioSumQ(oneItRes_bio)
> ##D oneItRes_fltQ    <- fltSumQ(oneItRes_flt)
> ##D oneItRes_fltStkQ <- fltStkSumQ(oneItRes_fltStk)
> ##D oneItRes_mtQ     <- mtSumQ(oneItRes_mt)
> ##D oneItRes_mtStkQ  <- mtStkSumQ(oneItRes_mtStk)
> ##D oneItRes_advQ    <- advSumQ(oneItRes_adv)
> ##D 
> ##D oneItRes_bio    <- bioSum(oneItRes, long = FALSE, years = ac(2016:2020))
> ##D oneItRes_flt    <- fltSum(oneItRes, long = FALSE, years = ac(2016:2020))
> ##D oneItRes_fltStk <- fltStkSum(oneItRes, long = FALSE, years = ac(2016:2020))
> ##D oneItRes_mt     <- mtSum(oneItRes, long = FALSE, years = ac(2016:2020))
> ##D oneItRes_mtStk  <- mtStkSum(oneItRes, long = FALSE, years = ac(2016:2020))
> ##D oneItRes_adv    <- advSum(oneItRes, long = FALSE, years = ac(2016:2020))
> ##D 
> ##D 
> ##D oneItRes_bioQ    <- bioSumQ(oneItRes_bio)
> ##D oneItRes_fltQ    <- fltSumQ(oneItRes_flt)
> ##D oneItRes_fltStkQ <- fltStkSumQ(oneItRes_fltStk)
> ##D oneItRes_mtQ     <- mtSumQ(oneItRes_mt)
> ##D oneItRes_mtStkQ  <- mtStkSumQ(oneItRes_mtStk)
> ##D oneItRes_advQ    <- advSumQ(oneItRes_adv)
> ##D 
> ##D 
> ##D oneItRes_bio    <- bioSum(oneItRes, long = FALSE) # Biol summary is only by year.
> ##D oneItRes_flt    <- fltSum(oneItRes, long = FALSE, byyear = FALSE)
> ##D oneItRes_fltStk <- fltStkSum(oneItRes, long = FALSE, byyear = FALSE)
> ##D oneItRes_mt     <- mtSum(oneItRes, long = FALSE, byyear = FALSE)
> ##D oneItRes_mtStk  <- mtStkSum(oneItRes, long = FALSE, byyear = FALSE)
> ##D oneItRes_adv    <- advSum(oneItRes, long = FALSE) # Advice summary is only by year.
> ##D 
> ##D oneItRes_bioQ    <- bioSumQ(oneItRes_bio)
> ##D oneItRes_fltQ    <- fltSumQ(oneItRes_flt)
> ##D oneItRes_fltStkQ <- fltStkSumQ(oneItRes_fltStk)
> ##D oneItRes_mtQ     <- mtSumQ(oneItRes_mt)
> ##D oneItRes_mtStkQ  <- mtStkSumQ(oneItRes_mtStk)
> ##D oneItRes_advQ    <- advSumQ(oneItRes_adv)
> ##D 
> ##D 
> ##D oneItRes_bio    <- bioSum(oneItRes, long = TRUE) # Biol summary is only by year.
> ##D oneItRes_flt    <- fltSum(oneItRes, long = TRUE, byyear = FALSE)
> ##D oneItRes_fltStk <- fltStkSum(oneItRes, long = TRUE, byyear = FALSE)
> ##D oneItRes_mt     <- mtSum(oneItRes, long = TRUE, byyear = FALSE)
> ##D oneItRes_mtStk  <- mtStkSum(oneItRes, long = TRUE, byyear = FALSE)
> ##D oneItRes_adv    <- advSum(oneItRes, long = TRUE) # Advice summary is only by year.
> ##D 
> ##D oneItRes_bioQ    <- bioSumQ(oneItRes_bio)
> ##D oneItRes_fltQ    <- fltSumQ(oneItRes_flt)
> ##D oneItRes_fltStkQ <- fltStkSumQ(oneItRes_fltStk)
> ##D oneItRes_mtQ     <- mtSumQ(oneItRes_mt)
> ##D oneItRes_mtStkQ  <- mtStkSumQ(oneItRes_mtStk)
> ##D oneItRes_advQ    <- advSumQ(oneItRes_adv)
> ##D 
> ##D oneItRes_risk <- riskSum(oneItRes, Bpa = c(stk1= 900), Blim = c(stk1 = 600), Prflim = c(fl1 = 0), scenario = 'alternative')
> ##D 
> ##D oneItRes_npv  <- npv(oneItRes, y0 = '2014')
> ##D 
> ##D #------------------------------------------------
> ##D # Example Multi: Two stock, two fleet, four iters.
> ##D #------------------------------------------------
> ##D multiRes_bio    <- bioSum(multiRes)
> ##D multiRes_flt    <- fltSum(multiRes)
> ##D multiRes_fltStk <- fltStkSum(multiRes)
> ##D multiRes_mt     <- mtSum(multiRes)
> ##D multiRes_mtStk  <- mtStkSum(multiRes)
> ##D multiRes_adv    <- advSum(multiRes)
> ##D 
> ##D multiRes_bioQ    <- bioSumQ(multiRes_bio)
> ##D multiRes_fltQ    <- fltSumQ(multiRes_flt)
> ##D multiRes_fltStkQ <- fltStkSumQ(multiRes_fltStk)
> ##D multiRes_mtQ     <- mtSumQ(multiRes_mt)
> ##D multiRes_mtStkQ  <- mtStkSumQ(multiRes_mtStk)
> ##D multiRes_advQ    <- advSumQ(multiRes_adv)
> ##D 
> ##D multiRes_bio    <- bioSum(multiRes, long = FALSE, years = ac(2016:2020))
> ##D multiRes_flt    <- fltSum(multiRes, long = FALSE, years = ac(2016:2020))
> ##D multiRes_fltStk <- fltStkSum(multiRes, long = FALSE, years = ac(2016:2020))
> ##D multiRes_mt     <- mtSum(multiRes, long = FALSE, years = ac(2016:2020))
> ##D multiRes_mtStk  <- mtStkSum(multiRes, long = FALSE, years = ac(2016:2020))
> ##D multiRes_adv    <- advSum(multiRes, long = FALSE, years = ac(2016:2020))
> ##D 
> ##D 
> ##D multiRes_bioQ    <- bioSumQ(multiRes_bio)
> ##D multiRes_fltQ    <- fltSumQ(multiRes_flt)
> ##D multiRes_fltStkQ <- fltStkSumQ(multiRes_fltStk)
> ##D multiRes_mtQ     <- mtSumQ(multiRes_mt)
> ##D multiRes_mtStkQ  <- mtStkSumQ(multiRes_mtStk)
> ##D multiRes_advQ    <- advSumQ(multiRes_adv)
> ##D 
> ##D 
> ##D multiRes_bio    <- bioSum(multiRes, long = FALSE) # Biol summary is only by year.
> ##D multiRes_flt    <- fltSum(multiRes, long = FALSE, byyear = FALSE)
> ##D multiRes_fltStk <- fltStkSum(multiRes, long = FALSE, byyear = FALSE)
> ##D multiRes_mt     <- mtSum(multiRes, long = FALSE, byyear = FALSE)
> ##D multiRes_mtStk  <- mtStkSum(multiRes, long = FALSE, byyear = FALSE)
> ##D multiRes_adv    <- advSum(multiRes, long = FALSE) # Advice summary is only by year.
> ##D 
> ##D multiRes_bioQ    <- bioSumQ(multiRes_bio)
> ##D multiRes_fltQ    <- fltSumQ(multiRes_flt)
> ##D multiRes_fltStkQ <- fltStkSumQ(multiRes_fltStk)
> ##D multiRes_mtQ     <- mtSumQ(multiRes_mt)
> ##D multiRes_mtStkQ  <- mtStkSumQ(multiRes_mtStk)
> ##D multiRes_advQ    <- advSumQ(multiRes_adv)
> ##D 
> ##D 
> ##D multiRes_bio    <- bioSum(multiRes, long = TRUE) # Biol summary is only by year.
> ##D multiRes_flt    <- fltSum(multiRes, long = TRUE, byyear = FALSE)
> ##D multiRes_fltStk <- fltStkSum(multiRes, long = TRUE, byyear = FALSE)
> ##D multiRes_mt     <- mtSum(multiRes, long = TRUE, byyear = FALSE)
> ##D multiRes_mtStk  <- mtStkSum(multiRes, long = TRUE, byyear = FALSE)
> ##D multiRes_adv    <- advSum(multiRes, long = TRUE) # Advice summary is only by year.
> ##D 
> ##D multiRes_bioQ    <- bioSumQ(multiRes_bio)
> ##D multiRes_fltQ    <- fltSumQ(multiRes_flt)
> ##D multiRes_fltStkQ <- fltStkSumQ(multiRes_fltStk)
> ##D multiRes_mtQ     <- mtSumQ(multiRes_mt)
> ##D multiRes_mtStkQ  <- mtStkSumQ(multiRes_mtStk)
> ##D multiRes_advQ    <- advSumQ(multiRes_adv)
> ##D 
> ##D multiRes_npv  <- npv(multiRes, y0 = '2014')
> ##D risk_multiRes <- riskSum(multiRes, Bpa = c(stk1= 135000, stk2 = 124000), Blim = c(stk1= 96000, stk2 = 89000), Prflim = c(fl1 = 0, fl2 = 0), scenario = 'alternative')
> ##D 
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("datasets")
> ### * datasets
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: datasets
> ### Title: FLBEIA datasets
> ### Aliases: datasets one oneIt multi res_flbeia mur
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> data(one)
> data(res_flbeia)
> 
> 
> 
> 
> cleanEx()
> nameEx("landStock.f")
> ### * landStock.f
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tlandStock
> ### Title: Extract landings, discard or catch at age
> ### Aliases: tlandStock tdiscStock landStock.f discStock.f catchStock.f
> ###   landWStock.f discWStock.f catchWStock.f landStock discStock
> ###   catchStock landWStock discWStock catchWStock
> 
> ### ** Examples
> 
> ## Not run: 
> ##D library(FLBEIA)
> ##D data(one)
> ##D landWStock.f(oneFl$fl1,"stk1")
> ##D landWStock(oneFl,"stk1")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("plotEco")
> ### * plotEco
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plotEco
> ### Title: Plots with fleets data
> ### Aliases: plotEco
> 
> ### ** Examples
> 
> ## Not run: 
> ##D library(FLBEIA)
> ##D library(ggplot2)
> ##D 
> ##D data(res_flbeia)
> ##D plotEco(oneRes, pdfnm='one')
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("plotFLBiols")
> ### * plotFLBiols
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plotFLBiols
> ### Title: Plots with biological data
> ### Aliases: plotFLBiols
> 
> ### ** Examples
> 
> ## Not run: 
> ##D library(FLBEIA)
> ##D library(ggplot2)
> ##D data(res_flbeia)
> ##D plotFLBiols(oneRes$biols, pdfname='oneRes')
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("plotFLFleets")
> ### * plotFLFleets
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plotFLFleets
> ### Title: Plots with fleets data
> ### Aliases: plotFLFleets
> 
> ### ** Examples
> 
> ## Not run: 
> ##D library(FLBEIA)
> ##D library(ggplot2)
> ##D data(res_flbeia)
> ##D plotFLFleets(oneFl,pdfnm='oneFl')
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("plotbioSum")
> ### * plotbioSum
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plotbioSum
> ### Title: Summary plots of the FLBEIA output
> ### Aliases: plotbioSum plotfltSum
> 
> ### ** Examples
> 
> ## Not run: 
> ##D 
> ##D library(FLBEIA)
> ##D 
> ##D # Apply the summary plots to the examples runs in FLBEIA help page.
> ##D 
> ##D data(res_flbeia)
> ##D #------------------------------------------------
> ##D # Example One: One stock, one fleet, one iter.
> ##D #------------------------------------------------
> ##D 
> ##D # Biological indicators.
> ##D plotbioSum( bioSum(oneRes), Blim=800, Bpa=1200, proj.yr=2010) # bioSum output in wide format
> ##D plotbioSum( bioSum(oneRes, long = FALSE))   # bioSum output in long format
> ##D plotbioSum( bioSum(oneRes), stk.nam='stk0') # if incorrect name for the stock
> ##D 
> ##D # Indicators at fleet level.
> ##D plotfltSum( fltSum(oneRes), proj.yr=2010) # fltSum output in wide format
> ##D plotfltSum( fltSum(oneRes, long = FALSE)) # fltSum output in long format
> ##D plotfltSum( fltSum(oneRes), flt.nam='stk1') # if incorrect name for the fleet
> ##D plotfltSum( fltSum(oneRes, byyear = FALSE)) # although seasonal disagregation, it is summarised by year
> ##D 
> ##D #------------------------------------------------
> ##D # Example OneIters: As one but with iterations.
> ##D #------------------------------------------------
> ##D 
> ##D # Biological indicators.
> ##D plotbioSum( bioSum(s1), Blim=800, Bpa=1200, proj.yr=2010) # bioSum output in wide format
> ##D plotbioSum( bioSum(s1, long = FALSE))   # bioSum output in long format
> ##D plotbioSum( bioSum(s1), stk.nam='stk0') # if incorrect name for the stock
> ##D 
> ##D 
> ##D # Indicators at fleet level.
> ##D plotfltSum( fltSum(s1), proj.yr=2010) # fltSum output in wide format
> ##D plotfltSum( fltSum(s1, long = FALSE)) # fltSum output in long format
> ##D plotfltSum( fltSum(s1), flt.nam='stk1') # if incorrect name for the fleet
> ##D plotfltSum( fltSum(s1, byyear = FALSE)) # although seasonal disagregation, it is summarised by year
> ##D 
> ##D # also possible to plot information on various scenarios
> ##D sc11_bio <- bioSum(s1)
> ##D sc12_bio <- bioSum(s1, scenario='alt'); sc12_bio$value <- sc12_bio$value*1.05
> ##D plotbioSum(rbind(sc11_bio, sc12_bio), Blim=800, Bpa=1200, proj.yr=2010)
> ##D 
> ##D #------------------------------------------------
> ##D # Example Multi: Two stock, two fleet, four iters.
> ##D #------------------------------------------------
> ##D 
> ##D for (st in names(s2$stocks)) # one plot for each stock
> ##D   plotbioSum( bioSum(s2, scenario='s2'), stk.nam=st, proj.yr=2010)
> ##D 
> ##D for (fl in names(s2$fleets)) # one plot for each fleet
> ##D   plotfltSum( fltSum(s2, scenario='s2'), flt.nam=fl, proj.yr=2010)
> ##D   
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("plotfltStkSum")
> ### * plotfltStkSum
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plotfltStkSum
> ### Title: Plots with fltStkSum data
> ### Aliases: plotfltStkSum
> 
> ### ** Examples
> 
> ## Not run: 
> ##D library(FLBEIA)
> ##D library(ggplot2)
> ##D data(res_flbeia)
> ##D plotfltStkSum(obj=oneRes,pdfnm = "oneRes")
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("stock.fleetInfo")
> ### * stock.fleetInfo
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: stock.fleetInfo
> ### Title: stock.fleetInfo
> ### Aliases: stock.fleetInfo
> 
> ### ** Examples
> 
> ## Not run: 
> ##D data(multi)
> ##D stock.fleetInfo(fl1)
> ## End(Not run)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  2.182 0.061 2.243 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
